import kareltherobot.*;
import java.awt.Color;

/**
 * 
 * Harvest a field of crops, (7x6)
 * 
 * @author Mahika Pandit
 * @version 6-14-23
 * 
 */

// This code is from Chapter 3 (figure 3_3a), it is one possible way to solve the problem, WITHOUT variables
// The purpose of this code is to either be an answer key if one would like to check their work or if someone would like to see how to go about the problem
// This code's constructor calls the harvester class, its superclass. This code is mainly for learning how to use inheritance, and to call the super classes methods
// Have fun :)

public class WideHarvester extends Harvester
{
    /**
     * Creates a WideHarvester object.
     *
     * @param street     specifies the vertical position on the grid
     *                   of this robot.
     * @param avenue     specifies the horizontal position on the grid
     *                   of this robot.
     * @param direction  specifies the direction of this robot.
     * @param beepers    specifies this robot's number of beepers.
     */
    public WideHarvester (int street, int avenue, 
           Direction direction, int beepers)
    {
        super(street, avenue, direction, beepers);
    }
    
    /* WideHarvester methods: */
    /**
     * robot harvests one row of beepers
     * 
     * precondition - robot facing away from wall, standing on beeper, facing row of beepers
     * postcondition - robot facing away from wall, standing on empty corner, facing away from empty row
     *  facing empty row
     */
    @Override
    public void harvestOneRow()
    {
        super.harvestOneRow();
        move();
        pickBeeper();
        move();
        pickBeeper();
    }

}
